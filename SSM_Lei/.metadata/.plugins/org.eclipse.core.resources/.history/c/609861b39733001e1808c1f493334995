<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- 原来的配置顺序是按照xml的先后顺序创建bean的，但是我们可以改变
	
	 -->
	<bean class="com.atguigu.bean.Person" id="person" depends-on="car"></bean>
	<bean class="com.atguigu.bean.Car" id="car"></bean>
	 
	 <!-- 测试bean的作用域 ： 
	 	1.singleton : 单实例的，默认
	 				在容器启动完成之前就已经创建好对象，保存在容器中了
	 				任何时候获取都是获取之前创建好的；
	 	2. prototype 多实例的
	 				在容器启动完成之前不会创建对象
	 
	  -->
	 <bean class="com.atguigu.bean.Car" id = "car01" scope="prototype" ></bean>

	<!--配置通过静态工厂 实例工厂 创建bean factoryBean
	
		工厂模式： 工厂帮我们创建对象，有一个专门帮我们创建对象的类，这个类就是工厂：
			1. 静态工厂： static
			2. 实例工厂： 需要创建对象，适用对象创建工厂
	
	  -->
	<bean class="com.atguigu.factory.AirPlaneStaticFactory" id ="factory" factory-method="getAirPlane">
		<constructor-arg name="jzName" value="李四"></constructor-arg>	
	</bean>
	
	
	<!-- 使用实例工厂创建 -->
	<bean class="com.atguigu.factory.AirPlaneInstanceFactory" id = "factory2"></bean>

	<!-- 先配置出实例工厂对象
		2. 配置我们要创建的airplane使用哪个工厂创建
			1.factory-bean 使用哪个工厂创建
			2. factory-method 使用哪个工厂方法
	 -->
	 <bean class="com.atguigu.bean.AirPlane" id = "airplane2" 
	 	factory-bean="factory2" factory-method="getAirPlane"
	 >
	 	<constructor-arg name="jzName" value="王五"></constructor-arg>
	 </bean>
	 
	 
	 <!-- Factory 创建对象 -->
	<bean class="com.atguigu.factory.MyFactoryBeanImle" id ="myFactory">
	
	</bean>
	
	<bean class="com.atguigu.bean.Book" id ="book" init-method="myInit" destroy-method="myDestory"></bean>
	
	<bean class="com.atguigu.bean.Car" id="car02" p:color="lvse" p:carName="111" p:price="100"></bean>
</beans>
